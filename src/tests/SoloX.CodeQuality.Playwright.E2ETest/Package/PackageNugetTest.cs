// ----------------------------------------------------------------------
// <copyright file="PackageNugetTest.cs" company="Xavier Solau">
// Copyright © 2021 Xavier Solau.
// Licensed under the MIT license.
// See LICENSE file in the project root for full license information.
// </copyright>
// ----------------------------------------------------------------------

using FluentAssertions;
using SoloX.CodeQuality.Test.Helpers;
using SoloX.CodeQuality.Test.Helpers.Solution;

namespace SoloX.CodeQuality.Playwright.E2ETest.Package
{
    public class PackageNugetTest
    {
        [Fact]
        public void IsShouldDeployNugetPackageAndRunTestWithEmbeddedWebHost()
        {
            var configurationName = ProbConfiguration();

            var root = new RandomGenerator().RandomString(4);

            // Let's create a solution in the random root folder.
            var solution = new SolutionBuilder(root, "TestSolution")
                // Set up the nuget.config to use a dedicated nuget cache and to specify where to get the nuget
                // packages we want to test (generated in the same solution).
                .WithNugetConfig(@"PkgCache", configuration =>
                {
                    // We want to use the package generated by the projects SoloX.CodeQuality.WebHost and SoloX.CodeQuality.Playwright.
                    configuration
                        .UsePackageSources(src =>
                        {
                            src.Clear()
                                .Add(@$"../../../../../../libs/SoloX.CodeQuality.WebHost/bin/{configurationName}")
                                .Add(@$"../../../../../../libs/SoloX.CodeQuality.Playwright/bin/{configurationName}")
                                .AddNugetOrg();
                        });
                })
                // Set up a xunit project to use the nugets.
                .WithProject("TestProject", "xunit", configuration =>
                {
                    configuration
                        // Configure the package reference on the package to test. In this case SoloX.CodeQuality.Playwright.
                        .UsePackageReference("SoloX.CodeQuality.Playwright")
                        // Add a global using
                        .UseGlobalUsing("SoloX.CodeQuality.Playwright")
                        // Create the files
                        .UseFiles(files =>
                        {
                            files
                                .Remove("UnitTest1.cs")
                                .Add(
                                    @"../PlaywrightTestBuilderLocalTest.cs",
                                    "PlaywrightTestBuilderLocalTest.cs",
                                    [("SoloX.CodeQuality.Playwright.E2ETest", "TestProject")])
                                .AddContent(@"../home.html", "home.html", "PreserveNewest");
                        });
                })
                // Finally create the solution.
                .Build();

            try
            {
                var actBuild = () => solution.Build();

                actBuild.Should().NotThrow();

                var actTest = () => solution.Test();

                actTest.Should().NotThrow();
            }
            finally
            {
                Directory.Delete(root, true);
            }
        }

        private static string ProbConfiguration()
        {
            var location = Path.GetDirectoryName(typeof(PackageNugetTest).Assembly.Location);

            return Path.GetFileName(Path.GetDirectoryName(location)!);
        }
    }
}
